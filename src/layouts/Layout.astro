---
import Heading from "./heading.astro";
import Navigation from "../components/Navigation.astro";
import Footer from "./footer.astro";
export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <div class="wrapper">
      <section data-pos="top">
        <Heading />
        <div class="container">
          <div class="content">
            <Navigation mobile={false} />
            <slot />
          </div>
        </div>
      </section>
      <section data-pos="bottom"><Footer /></section>
    </div>
  </body>
  <style is:global>
    :root {
      --base-color: 237, 237, 237;
      --base-dark: 12, 1, 23;
      --accent-color: 62, 9, 121;
      --secondary-color: 255, 6, 0;
      --accent-gradient: linear-gradient(
        242deg,
        rgba(var(--accent-color), 1) 0%,
        rgba(var(--secondary-color), 1) 100%
      );
      --gradient-transparent: linear-gradient(
        57deg,
        rgba(var(--accent-color), 1) 25%,
        rgba(var(--secondary-color), 1) 50%,
        rgba(255, 255, 255, 0) 75%
      );
      --main-bezier: cubic-bezier(0.43, 0.11, 0.14, 0.95);

      --content-padding: min(6vw, 3em);
      --mt: 3rem;

      --fnw-light: 200;
      --fnw-defautl: 300;
      --fnw-medium: 400;
      --fnw-bold: 600;
      --fnw-bolder: 700;
    }
    *,
    *::after,
    *::before {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font: inherit;
    }

    @media (prefers-color-scheme: light) {
      html {
        --background-clr-theme: var(--base-color);
        --text-clr-theme: var(--accent-color);
      }
    }
    @media (prefers-color-scheme: dark) {
      html {
        --text-clr-theme: var(--base-color);
        --background-clr-theme: var(--base-dark);
      }
    }

    html {
      font-family: system-ui, sans-serif;
      background-color: rgb(var(--background-clr-theme)) !important;
    }
    .wrapper {
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
    }

    strong {
      font-weight: var(--fnw-bold);
    }
    svg {
      width: 30px;
      height: 30px;
    }
    svg:hover {
      animation-name: wiggle;
      animation-duration: 1s;
      animation-timing-function: var(--main-bezier);
      animation-iteration-count: infinite;
    }
    .container {
      max-width: 80rem;
      margin-inline: auto;
    }

    .content {
      padding-inline: var(--content-padding);
    }
    .content::before {
      content: "";
      display: block;
      height: 4px;
      max-width: 300px;
      margin-bottom: 0.7rem;
      background: rgb(62, 9, 121);
      background: var(--accent-gradient);
    }
    h1 {
      color: rgba(var(--text-clr-theme), 1);
      font-weight: var(--fnw-bolder);
      font-size: clamp(2rem, 10vw, 3.5rem);
      line-height: clamp(2rem, 10vw, 4rem);
    }
    h2 {
      font-weight: var(--fnw-bold);
      color: rgba(var(--text-clr-theme), 1);
      font-size: 2.1rem;
    }
    p {
      color: rgba(var(--text-clr-theme), 0.5);
    }
    code {
      font-family: Menlo, Monaco, Lucida Console, Liberation Mono,
        DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;
    }

    @keyframes wiggle {
      0% {
        rotate: 0deg;
      }
      25% {
        rotate: -10deg;
      }
      50% {
        rotate: 20deg;
        scale: 110%;
      }
      75% {
        rotate: -20deg;
      }
      100% {
        rotate: 0deg;
      }
    }
  </style>
</html>
